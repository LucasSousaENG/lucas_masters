
classdef vehicle_smc_gains < ros.Message
    %vehicle_smc_gains MATLAB implementation of wpg/vehicle_smc_gains
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'wpg/vehicle_smc_gains' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b73fdccb333beb67d87e5eba68379cc3' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Timestamp' 'TimestampSample' 'KGains' 'BetaGains' 'LambdaGains' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'timestamp' 'timestamp_sample' 'k_gains' 'beta_gains' 'lambda_gains' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Timestamp
        TimestampSample
        KGains
        BetaGains
        LambdaGains
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'Header')
            obj.Header = val;
        end
        function set.Timestamp(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'Timestamp');
            obj.Timestamp = uint64(val);
        end
        function set.TimestampSample(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'TimestampSample');
            obj.TimestampSample = uint64(val);
        end
        function set.KGains(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'KGains');
            obj.KGains = single(val);
        end
        function set.BetaGains(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'BetaGains');
            obj.BetaGains = single(val);
        end
        function set.LambdaGains(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'vehicle_smc_gains', 'LambdaGains');
            obj.LambdaGains = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.wpg.vehicle_smc_gains.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.wpg.vehicle_smc_gains(strObj);
        end
    end
end
